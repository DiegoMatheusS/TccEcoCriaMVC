<!DOCTYPE html>
<html lang="pt-BR">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>EcoCria</title>
    <link
      href="https://fonts.googleapis.com/css2?family=Inter:wght@400;700&display=swap"
      rel="stylesheet"
    />
    <link rel="stylesheet" href="~/css/style.css" asp-append-version="true" />
    <link rel="icon" href="img/ecocriaimg.png" />
  </head>
  <body>
    <main>
      <div class="container">
        <div class="form-section">
          <h2>Encontre o ponto mais próximo de você</h2>
          <p>
            Digite seu CEP, escolha o produto e encontre os pontos de
            recebimento para o descarte correto do seu produto.
          </p>
          <p class="small-text">
            *Se houver dúvida, procure um funcionário do estabelecimento.
          </p>
          <form action="#">
            <label for="cep">CEP</label>
            <input type="text" id="cep" maxlength="8" placeholder="_____-___" required />

            <label for="distance">Distância</label>
            <select id="distance" required>
              <option value="" disabled selected>Selecione a distância</option>
              <option value="2">2km</option>
              <option value="5">5km</option>
              <option value="10">10km</option>
            </select>

            <label for="porte">Porte</label>
            <select id="porte" required>
              <option value="" disabled selected>Selecione o porte</option>
              <option value="pequeno">Pequeno</option>
              <option value="medio">Médio</option>
              <option value="grande">Grande</option>
            </select>

            <label for="produto">Produto</label>
            <select id="produto" required>
              <option value="" disabled selected>Selecione o produto</option>
              <option value="ponto de coleta de eletronico">Eletrônico</option>
              <option value="ponto de coleta de organico">Orgânico</option>
              <option value="ponto de coleta de plastico">Plástico</option>
            </select>

            <button type="submit">Encontrar Ponto</button>
          </form>
        </div>
        <div id="map" style="height: 500px;"></div>

        <script type="text/javascript">
          function buscarCoordenadasPorCEP(cep, callback) {
            var geocoder = new google.maps.Geocoder();
            geocoder.geocode({ address: cep }, function (results, status) {
                if (status === "OK") {
                    var location = results[0].geometry.location;
                    callback(location);

                    // Remove o marcador anterior se existir
                    if (centralMarker) {
                        centralMarker.setMap(null);
                    }

                    // Adiciona o marcador vermelho sobre o ponto central
                    centralMarker = new google.maps.Marker({
                        map: map,
                        position: location,
                        icon: {
                            url: "http://maps.google.com/mapfiles/ms/icons/red-dot.png"
                        }
                    });
                } else {
                    alert("Não foi possível encontrar o CEP: " + status);
                    callback(null);
                }
            });
          }

          function initMap() {
            var defaultCenter = { lat: -23.55052, lng: -46.633308 };
            map = new google.maps.Map(document.getElementById("map"), {
              zoom: 12,
              center: defaultCenter,
            });

            document.querySelector("form").addEventListener("submit", function (e) {
              e.preventDefault();
              var cep = document.getElementById("cep").value;
              var distance = document.getElementById("distance").value;
              var produto = document.getElementById("produto").value;

              if (cep && distance && produto) {
                buscarCoordenadasPorCEP(cep, function (location) {
                  if (location) {
                    var distanceInMeters = parseInt(distance) * 1000;
                    buscarPontosDeColeta(map, location, distanceInMeters, produto);

                    if (currentCircle) {
                      currentCircle.setMap(null);
                    }

                    currentCircle = new google.maps.Circle({
                      map: map,
                      radius: distanceInMeters,
                      fillColor: '#60c659',
                      fillOpacity: 0,
                      strokeColor: '#60c659',
                      strokeOpacity: 0.8,
                      strokeWeight: 2,
                      center: location,
                    });
                  }
                });
              }
            });
          }

          let map;
          let currentCircle = null;
          let centralMarker = null;
          let markers = [];

          function clearMarkers() {
            for (var i = 0; i < markers.length; i++) {
              markers[i].setMap(null);
            }
            markers = [];
          }

          function buscarPontosDeColeta(map, location, distance, produto) {
            clearMarkers();
            var service = new google.maps.places.PlacesService(map);

            var request = {
              location: location,
              radius: distance,
              query: produto,
            };

            service.textSearch(request, function (results, status) {
              if (status === google.maps.places.PlacesServiceStatus.OK) {
                for (var i = 0; i < results.length; i++) {
                  var place = results[i];

                  var distanceInMeters = google.maps.geometry.spherical.computeDistanceBetween(location, place.geometry.location);

                  if (distanceInMeters <= distance) {
                    createGreenMarker(map, place);
                  }
                }
                map.setCenter(location);
              }
            });
          }

          function createGreenMarker(map, place) {
            var marker = new google.maps.Marker({
              map: map,
              position: place.geometry.location,
              icon: {
                url: "http://maps.google.com/mapfiles/ms/icons/green-dot.png",
              //url: "~/img/logoponto.png", // Substitua com a URL da imagem desejada
              //scaledSize: new google.maps.Size(32, 32) // Define o tamanho do ícone, ajustável conforme necessário
              },
            });
            markers.push(marker);
          }
        </script>
        <script
          src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDn53Otf4ztOb800GW7QXRojwmMgGD-PFA&libraries=places&callback=initMap"
          async
          defer
        ></script>
      </div>
    </main>
  </body>
</html>
